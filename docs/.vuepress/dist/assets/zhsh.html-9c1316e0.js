import{_ as e,r as o,o as c,c as l,a as n,b as t,w as p,d as s,e as i}from"./app-58ca2cdc.js";const u={},k=n("h2",{id:"纵横四海",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#纵横四海","aria-hidden":"true"},"#"),s(" 纵横四海")],-1),r={class:"table-of-contents"},d=i(`<h3 id="攻击怪物" tabindex="-1"><a class="header-anchor" href="#攻击怪物" aria-hidden="true">#</a> 攻击怪物</h3><div class="custom-container tip"><p class="custom-container-title">进入网址时，会有两种情况，1.处于攻击状态，2.正常状态。由于是动态链接，所以需要根据上一个响应体的内容匹配攻击或者怪物链接。</p></div><ul><li>处于攻击状态时，先匹配攻击脚本，退出状态</li><li>正常状态，匹配怪物，进入怪物页以后再匹配攻击</li><li>保存数据，先 <em><strong>存入缓存</strong></em> ，再存入数据库</li><li>获取数据，<em><strong>先查缓存</strong></em>，再查数据库</li><li>过控制boolean对象，<em><strong>停止</strong></em> 攻击</li><li><em><strong>异步方法</strong></em> 存mysql，不影响当前线程打怪<div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ZhshServiceImpl</span><span class="token punctuation">{</span>


    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">Zhsh</span> game <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Zhsh</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token annotation punctuation">@Resource</span>
    <span class="token keyword">private</span> <span class="token class-name">RedisUtils</span> redisUtils<span class="token punctuation">;</span>

    <span class="token annotation punctuation">@Resource</span>
    <span class="token keyword">private</span> <span class="token class-name">AsyncSaveSql</span> saveSql<span class="token punctuation">;</span>
    <span class="token keyword">private</span>     <span class="token keyword">int</span> count <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">private</span>      <span class="token class-name">Boolean</span> stop<span class="token punctuation">;</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">attack</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
       stop<span class="token operator">=</span><span class="token boolean">true</span><span class="token punctuation">;</span>
       <span class="token keyword">while</span> <span class="token punctuation">(</span>stop<span class="token punctuation">)</span> <span class="token punctuation">{</span>

            <span class="token class-name">Unirest</span><span class="token punctuation">.</span><span class="token function">config</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">verifySsl</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">Unirest</span><span class="token punctuation">.</span><span class="token function">config</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">defaultBaseUrl</span><span class="token punctuation">(</span><span class="token string">&quot;https://sea.pccsh.cn&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token comment">// 刷新页面，请求1</span>
            <span class="token class-name">HttpResponse</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> home <span class="token operator">=</span>
            <span class="token class-name">Unirest</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;/Map/340_264?sid=2HsGTdIXRs71FJNFjsImIT320Cf51JF3&quot;</span><span class="token punctuation">)</span>
                   <span class="token punctuation">.</span><span class="token function">asString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>



            <span class="token comment">//如果处于攻击状态，直接攻击返回</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>home<span class="token punctuation">.</span><span class="token function">getBody</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span><span class="token string">&quot;攻击&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                <span class="token class-name">String</span> find4 <span class="token operator">=</span> <span class="token class-name">Jsoup</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>home<span class="token punctuation">.</span><span class="token function">getBody</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                                    <span class="token punctuation">.</span><span class="token function">select</span><span class="token punctuation">(</span><span class="token string">&quot;a:matchesOwn(^攻击$)&quot;</span><span class="token punctuation">)</span>
                                    <span class="token punctuation">.</span><span class="token function">attr</span><span class="token punctuation">(</span><span class="token string">&quot;href&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token class-name">HttpResponse</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> stringHttpResponse <span class="token operator">=</span> <span class="token class-name">Unirest</span>
                                                        <span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>find4<span class="token punctuation">)</span>
                                                        <span class="token punctuation">.</span><span class="token function">asString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token punctuation">}</span>

           <span class="token comment">//正常状态，开始找怪物</span>
           <span class="token class-name">HttpResponse</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> home1 <span class="token operator">=</span> <span class="token class-name">Unirest</span>
                                       <span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;/Map/340_264?sid=2&quot;</span><span class="token punctuation">)</span>
                                       <span class="token punctuation">.</span><span class="token function">asString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">String</span> find <span class="token operator">=</span> <span class="token class-name">Jsoup</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>home1<span class="token punctuation">.</span><span class="token function">getBody</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                               <span class="token punctuation">.</span><span class="token function">select</span><span class="token punctuation">(</span><span class="token string">&quot;a:contains(哥斯拉龙)&quot;</span><span class="token punctuation">)</span>
                               <span class="token punctuation">.</span><span class="token function">attr</span><span class="token punctuation">(</span><span class="token string">&quot;href&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">// 进入攻击状态，请求1</span>
            <span class="token class-name">HttpResponse</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> attack <span class="token operator">=</span> <span class="token class-name">Unirest</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>find<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">asString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>



            <span class="token class-name">String</span> attackOne <span class="token operator">=</span> <span class="token class-name">Jsoup</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>attack<span class="token punctuation">.</span><span class="token function">getBody</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                                    <span class="token punctuation">.</span><span class="token function">select</span><span class="token punctuation">(</span><span class="token string">&quot;a:matchesOwn(^攻击$)&quot;</span><span class="token punctuation">)</span>
                                    <span class="token punctuation">.</span><span class="token function">attr</span><span class="token punctuation">(</span><span class="token string">&quot;href&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">// 第一次攻击 请求2</span>
            <span class="token class-name">HttpResponse</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> attack2 <span class="token operator">=</span> <span class="token class-name">Unirest</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>attackOne<span class="token punctuation">)</span>
                                                  <span class="token punctuation">.</span><span class="token function">asString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>



            <span class="token class-name">Pattern</span> three <span class="token operator">=</span> <span class="token class-name">Pattern</span><span class="token punctuation">.</span><span class="token function">compile</span><span class="token punctuation">(</span><span class="token string">&quot;经验:\\\\+\\\\d+&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token class-name">Matcher</span> level <span class="token operator">=</span> three<span class="token punctuation">.</span><span class="token function">matcher</span><span class="token punctuation">(</span>attack2<span class="token punctuation">.</span><span class="token function">getBody</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
           <span class="token keyword">while</span> <span class="token punctuation">(</span>level<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
               count<span class="token operator">++</span><span class="token punctuation">;</span>
               <span class="token class-name">String</span> group <span class="token operator">=</span> level<span class="token punctuation">.</span><span class="token function">group</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
               <span class="token class-name">String</span> countall<span class="token operator">=</span><span class="token string">&quot;第&quot;</span><span class="token operator">+</span>count<span class="token operator">+</span><span class="token string">&quot;次打怪:&quot;</span><span class="token operator">+</span> group<span class="token punctuation">;</span>
               <span class="token class-name">String</span> countall1<span class="token operator">=</span><span class="token string">&quot;已经获得经验&quot;</span><span class="token operator">+</span>count<span class="token operator">*</span><span class="token number">25600</span><span class="token punctuation">;</span>
               redisUtils<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">&quot;zhsh&quot;</span><span class="token punctuation">,</span>countall<span class="token operator">+</span><span class="token string">&quot; &quot;</span><span class="token operator">+</span>countall1<span class="token punctuation">)</span><span class="token punctuation">;</span>

           <span class="token punctuation">}</span>

            <span class="token comment">//写入缓存</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>count <span class="token operator">%</span> <span class="token number">300</span><span class="token operator">==</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                <span class="token comment">//构造对象</span>
                <span class="token class-name">Zhsh</span> game1 <span class="token operator">=</span> <span class="token function">getGame</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token comment">//写入缓存</span>
                redisUtils<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">&quot;game_&quot;</span><span class="token punctuation">,</span> game1<span class="token punctuation">,</span><span class="token number">600</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

            <span class="token comment">//写入数据库</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>count <span class="token operator">%</span><span class="token number">10000</span><span class="token operator">==</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>

                saveSql<span class="token punctuation">.</span><span class="token function">saveSqlTask</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
<span class="token punctuation">}</span>


</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h3 id="获取经验" tabindex="-1"><a class="header-anchor" href="#获取经验" aria-hidden="true">#</a> 获取经验</h3><ul><li>先判断是不是处于怪物界面,是就撤退</li><li>正则匹配，这里是肯定后置 <em><strong>(?&lt;=经验:)</strong></em> 匹配。</li></ul><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>    <span class="token keyword">public</span> <span class="token class-name">Zhsh</span> <span class="token function">getGame</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Unirest</span><span class="token punctuation">.</span><span class="token function">config</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">verifySsl</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Unirest</span><span class="token punctuation">.</span><span class="token function">config</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">defaultBaseUrl</span><span class="token punctuation">(</span><span class="token string">&quot;https://sea.pccsh.cn&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">HttpResponse</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> user <span class="token operator">=</span> <span class="token class-name">Unirest</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;/User/Index/Index?sid=2&quot;</span><span class="token punctuation">)</span>
                                           <span class="token punctuation">.</span><span class="token function">asString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">if</span> <span class="token punctuation">(</span>user<span class="token punctuation">.</span><span class="token function">getBody</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span><span class="token string">&quot;撤退&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token class-name">String</span> exit <span class="token operator">=</span> <span class="token class-name">Jsoup</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>user<span class="token punctuation">.</span><span class="token function">getBody</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                               <span class="token punctuation">.</span><span class="token function">select</span><span class="token punctuation">(</span><span class="token string">&quot;a:contains(撤退)&quot;</span><span class="token punctuation">)</span>
                               <span class="token punctuation">.</span><span class="token function">attr</span><span class="token punctuation">(</span><span class="token string">&quot;href&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">HttpResponse</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> use <span class="token operator">=</span> <span class="token class-name">Unirest</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>exit<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">asString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token class-name">HttpResponse</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> user1 <span class="token operator">=</span> <span class="token class-name">Unirest</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;/User/Index/Index?sid=3&quot;</span><span class="token punctuation">)</span>
                                            <span class="token punctuation">.</span><span class="token function">asString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Pattern</span> one <span class="token operator">=</span> <span class="token class-name">Pattern</span><span class="token punctuation">.</span><span class="token function">compile</span><span class="token punctuation">(</span><span class="token string">&quot;(?&lt;=经验:)\\\\d+\\\\/\\\\d+&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Pattern</span> two <span class="token operator">=</span> <span class="token class-name">Pattern</span><span class="token punctuation">.</span><span class="token function">compile</span><span class="token punctuation">(</span><span class="token string">&quot;(?&lt;=等级:)\\\\d+&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">Matcher</span> level <span class="token operator">=</span> two<span class="token punctuation">.</span><span class="token function">matcher</span><span class="token punctuation">(</span>user1<span class="token punctuation">.</span><span class="token function">getBody</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Matcher</span> matcher <span class="token operator">=</span> one<span class="token punctuation">.</span><span class="token function">matcher</span><span class="token punctuation">(</span>user1<span class="token punctuation">.</span><span class="token function">getBody</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">while</span> <span class="token punctuation">(</span>matcher<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">String</span> ex <span class="token operator">=</span> matcher<span class="token punctuation">.</span><span class="token function">group</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> split <span class="token operator">=</span> ex<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&quot;/&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            game<span class="token punctuation">.</span><span class="token function">setExperienceNow</span><span class="token punctuation">(</span><span class="token class-name">Double</span><span class="token punctuation">.</span><span class="token function">parseDouble</span><span class="token punctuation">(</span>split<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">10000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            game<span class="token punctuation">.</span><span class="token function">setExperienceNeed</span><span class="token punctuation">(</span><span class="token class-name">Double</span><span class="token punctuation">.</span><span class="token function">parseDouble</span><span class="token punctuation">(</span>split<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">10000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">while</span> <span class="token punctuation">(</span>level<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">String</span> leve <span class="token operator">=</span> level<span class="token punctuation">.</span><span class="token function">group</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            game<span class="token punctuation">.</span><span class="token function">setLevel</span><span class="token punctuation">(</span><span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">parseInt</span><span class="token punctuation">(</span>leve<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>


        <span class="token comment">//返回对象</span>
        <span class="token keyword">return</span> game<span class="token punctuation">;</span>

    <span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="返回前端" tabindex="-1"><a class="header-anchor" href="#返回前端" aria-hidden="true">#</a> 返回前端</h3><ul><li>先查缓存，有就缓存</li><li>没有就查数据库</li></ul><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>

    <span class="token comment">//根据数据库查</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">Zhsh</span> <span class="token function">getNew</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

        <span class="token comment">//先查缓存，不存在再查数据库</span>
        <span class="token class-name">Object</span> game2 <span class="token operator">=</span> redisUtils<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;game_&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>game2 <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token keyword">return</span>  <span class="token class-name">BeanUtil</span><span class="token punctuation">.</span><span class="token function">toBean</span><span class="token punctuation">(</span>game2<span class="token punctuation">,</span> <span class="token class-name">Zhsh</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token class-name">LambdaQueryWrapper</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Zhsh</span><span class="token punctuation">&gt;</span></span> queryWrapper<span class="token operator">=</span>
        <span class="token keyword">new</span> <span class="token class-name">LambdaQueryWrapper</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">//根据id倒叙查询</span>
        queryWrapper<span class="token punctuation">.</span><span class="token function">orderByDesc</span><span class="token punctuation">(</span><span class="token class-name">Zhsh</span><span class="token operator">::</span><span class="token function">getLevel</span><span class="token punctuation">)</span>
                    <span class="token punctuation">.</span><span class="token function">last</span><span class="token punctuation">(</span><span class="token string">&quot;limit 1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span>  <span class="token function">getOne</span><span class="token punctuation">(</span>queryWrapper<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="python版本" tabindex="-1"><a class="header-anchor" href="#python版本" aria-hidden="true">#</a> python版本</h3><div class="custom-container tip"><p class="custom-container-title">python版本，有修理装备的逻辑，和低等级的后续攻击.正则嵌套了很多循环，影响效率。应该有办法优化才对。最后是输出到文件</p></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># -*- coding: utf-8 -*-</span>
<span class="token keyword">import</span> requests
<span class="token keyword">import</span> urllib3
<span class="token keyword">from</span> parsel <span class="token keyword">import</span> Selector
<span class="token keyword">import</span> re  <span class="token comment"># 正则包</span>

<span class="token comment"># 忽略证书警告</span>
urllib3<span class="token punctuation">.</span>disable_warnings<span class="token punctuation">(</span><span class="token punctuation">)</span>

headers <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token string">&#39;user-agent&#39;</span><span class="token punctuation">:</span> &#39;Mozilla<span class="token operator">/</span><span class="token number">5.0</span> <span class="token punctuation">(</span>Windows NT <span class="token number">10.0</span><span class="token punctuation">;</span> Win64<span class="token punctuation">;</span> x64<span class="token punctuation">)</span>
    AppleWebKit<span class="token operator">/</span><span class="token number">537.36</span> <span class="token punctuation">(</span>KHTML<span class="token punctuation">,</span> like Gecko<span class="token punctuation">)</span> Chrome<span class="token operator">/</span><span class="token number">110.0</span><span class="token number">.0</span><span class="token number">.0</span> &#39;
                  <span class="token string">&#39;Safari/537.36 Edg/110.0.1587.41&#39;</span>
<span class="token punctuation">}</span>
count <span class="token operator">=</span> <span class="token number">0</span>

<span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>

    <span class="token comment"># verify=False 不验证ssl.且带头请求</span>
    r <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">&#39;https://sea.pccsh.cn/Map/257_517?sid=gqhW&#39;</span><span class="token punctuation">,</span>
                     verify<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span>
                     headers<span class="token operator">=</span>headers<span class="token punctuation">)</span>
    html <span class="token operator">=</span> r<span class="token punctuation">.</span>text

    <span class="token comment"># 匹配html</span>
    selector <span class="token operator">=</span> Selector<span class="token punctuation">(</span>text<span class="token operator">=</span>html<span class="token punctuation">)</span>

    <span class="token keyword">for</span> a <span class="token keyword">in</span> selector<span class="token punctuation">.</span>xpath<span class="token punctuation">(</span><span class="token string">&#39;//a[text()=&quot;四瞳灵狐&quot;]&#39;</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        startUrl <span class="token operator">=</span> a<span class="token punctuation">.</span>xpath<span class="token punctuation">(</span><span class="token string">&#39;@href&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token punctuation">)</span>

        r <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&#39;https://sea.pccsh.cn</span><span class="token interpolation"><span class="token punctuation">{</span>startUrl<span class="token punctuation">}</span></span><span class="token string">&#39;</span></span><span class="token punctuation">,</span>
                         verify<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span>
                         headers<span class="token operator">=</span>headers<span class="token punctuation">)</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;---------------------第</span><span class="token interpolation"><span class="token punctuation">{</span>count<span class="token punctuation">}</span></span><span class="token string">攻击----------------------&quot;</span></span><span class="token punctuation">)</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span>re<span class="token punctuation">.</span>findall<span class="token punctuation">(</span><span class="token string">&#39;四瞳灵狐体力\\((.*?)\\)&#39;</span><span class="token punctuation">,</span> r<span class="token punctuation">.</span>text<span class="token punctuation">)</span><span class="token punctuation">,</span> end<span class="token operator">=</span><span class="token string">&quot;&quot;</span><span class="token punctuation">)</span>

    <span class="token keyword">for</span> a1 <span class="token keyword">in</span> selector<span class="token punctuation">.</span>xpath<span class="token punctuation">(</span><span class="token string">&#39;//a[text()=&quot;攻击&quot;]&#39;</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        attUrl <span class="token operator">=</span> a1<span class="token punctuation">.</span>xpath<span class="token punctuation">(</span><span class="token string">&#39;@href&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token punctuation">)</span>

        r1 <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&#39;https://sea.pccsh.cn</span><span class="token interpolation"><span class="token punctuation">{</span>attUrl<span class="token punctuation">}</span></span><span class="token string">&#39;</span></span><span class="token punctuation">,</span>
                          verify<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span>
                          headers<span class="token operator">=</span>headers<span class="token punctuation">)</span>

        <span class="token keyword">print</span><span class="token punctuation">(</span>re<span class="token punctuation">.</span>findall<span class="token punctuation">(</span><span class="token string">&#39;四瞳灵狐体力(...........)&#39;</span><span class="token punctuation">,</span> r1<span class="token punctuation">.</span>text<span class="token punctuation">)</span><span class="token punctuation">,</span> end<span class="token operator">=</span><span class="token string">&quot;&quot;</span><span class="token punctuation">)</span>

        selector <span class="token operator">=</span> Selector<span class="token punctuation">(</span>text<span class="token operator">=</span>r1<span class="token punctuation">.</span>text<span class="token punctuation">)</span>
        <span class="token keyword">for</span> a3 <span class="token keyword">in</span> selector<span class="token punctuation">.</span>xpath<span class="token punctuation">(</span><span class="token string">&#39;//a[text()=&quot;攻击&quot;]&#39;</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
            attUrl <span class="token operator">=</span> a3<span class="token punctuation">.</span>xpath<span class="token punctuation">(</span><span class="token string">&#39;@href&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token punctuation">)</span>
            r3 <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&#39;https://sea.pccsh.cn</span><span class="token interpolation"><span class="token punctuation">{</span>attUrl<span class="token punctuation">}</span></span><span class="token string">&#39;</span></span><span class="token punctuation">,</span>
                              verify<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span>
                              headers<span class="token operator">=</span>headers<span class="token punctuation">)</span>

            three <span class="token operator">=</span> re<span class="token punctuation">.</span>findall<span class="token punctuation">(</span><span class="token string">&#39;(?&lt;=经验:)\\+\\d+&#39;</span><span class="token punctuation">,</span> r3<span class="token punctuation">.</span>text<span class="token punctuation">)</span>
            <span class="token comment"># three = re.findall(&#39;四瞳灵狐体力\\((.*?)\\)&#39;, r3.text)</span>

            <span class="token keyword">if</span> <span class="token builtin">len</span><span class="token punctuation">(</span>three<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">:</span>
                <span class="token keyword">print</span><span class="token punctuation">(</span>three<span class="token punctuation">)</span>

            <span class="token keyword">else</span><span class="token punctuation">:</span>
                <span class="token keyword">print</span><span class="token punctuation">(</span>re<span class="token punctuation">.</span>findall<span class="token punctuation">(</span><span class="token string">&#39;四瞳灵狐体力(...........)&#39;</span><span class="token punctuation">,</span> r3<span class="token punctuation">.</span>text<span class="token punctuation">)</span><span class="token punctuation">)</span>
                selector <span class="token operator">=</span> Selector<span class="token punctuation">(</span>text<span class="token operator">=</span>r3<span class="token punctuation">.</span>text<span class="token punctuation">)</span>
                <span class="token keyword">for</span> a22 <span class="token keyword">in</span> selector<span class="token punctuation">.</span>xpath<span class="token punctuation">(</span><span class="token string">&#39;//a[text()=&quot;攻击&quot;]&#39;</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
                    attUrl <span class="token operator">=</span> a22<span class="token punctuation">.</span>xpath<span class="token punctuation">(</span><span class="token string">&#39;@href&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token punctuation">)</span>
                    r22 <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&#39;https://sea.pccsh.cn</span><span class="token interpolation"><span class="token punctuation">{</span>attUrl<span class="token punctuation">}</span></span><span class="token string">&#39;</span></span><span class="token punctuation">,</span>
                                       verify<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span>
                                       headers<span class="token operator">=</span>headers<span class="token punctuation">)</span>

                    test <span class="token operator">=</span> re<span class="token punctuation">.</span>findall<span class="token punctuation">(</span><span class="token string">&#39;经验:\\+\\d{4,}&#39;</span><span class="token punctuation">,</span> r22<span class="token punctuation">.</span>text<span class="token punctuation">)</span>
                    <span class="token keyword">print</span><span class="token punctuation">(</span>test<span class="token punctuation">)</span>

            count <span class="token operator">+=</span> <span class="token number">1</span>
            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;---------------------结束-------------------------------&quot;</span><span class="token punctuation">)</span>
            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token punctuation">)</span>
            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token punctuation">)</span>
            <span class="token comment"># 每100次修理装备</span>
            <span class="token keyword">if</span> count <span class="token operator">%</span> <span class="token number">50</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">:</span>
                <span class="token comment"># 进入地图</span>
                r6 <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>
                    <span class="token string">&#39;https://sea.pccsh.cn/Map/Index/MapCity/257_517?sid&#39;</span><span class="token punctuation">,</span>
                    verify<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span>
                    headers<span class="token operator">=</span>headers<span class="token punctuation">)</span>
                <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;进入地图&quot;</span><span class="token punctuation">)</span>
                <span class="token comment"># 进入铁匠铺</span>
                selector <span class="token operator">=</span> Selector<span class="token punctuation">(</span>text<span class="token operator">=</span>r6<span class="token punctuation">.</span>text<span class="token punctuation">)</span>
                <span class="token keyword">for</span> a6 <span class="token keyword">in</span> selector<span class="token punctuation">.</span>xpath<span class="token punctuation">(</span><span class="token string">&#39;//a[text()=&quot;铁匠铺&quot;]&#39;</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
                    attUrl <span class="token operator">=</span> a6<span class="token punctuation">.</span>xpath<span class="token punctuation">(</span><span class="token string">&#39;@href&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token punctuation">)</span>
                    r8 <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&#39;https://sea.pccsh.cn</span><span class="token interpolation"><span class="token punctuation">{</span>attUrl<span class="token punctuation">}</span></span><span class="token string">&#39;</span></span><span class="token punctuation">,</span>
                                      verify<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span>

                                      headers<span class="token operator">=</span>headers<span class="token punctuation">)</span>
                    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;进入铁匠铺&quot;</span><span class="token punctuation">)</span>

                <span class="token comment">#             进入修理界面</span>
                r5 <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>
                    <span class="token string">&#39;https://sea.pccsh.cn/Bag/Equ/RecoverEqu?npc=&#39;</span><span class="token punctuation">,</span>
                    verify<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span>
                    headers<span class="token operator">=</span>headers<span class="token punctuation">)</span>

                <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;寻找铁匠&quot;</span><span class="token punctuation">)</span>

                selector <span class="token operator">=</span> Selector<span class="token punctuation">(</span>text<span class="token operator">=</span>r5<span class="token punctuation">.</span>text<span class="token punctuation">)</span>
                <span class="token keyword">for</span> a5 <span class="token keyword">in</span> selector<span class="token punctuation">.</span>xpath<span class="token punctuation">(</span><span class="token string">&#39;//a[contains(text(),&quot;全部修复&quot;)]&#39;</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
                    attUrl <span class="token operator">=</span> a5<span class="token punctuation">.</span>xpath<span class="token punctuation">(</span><span class="token string">&#39;@href&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token punctuation">)</span>
                    <span class="token comment"># 修理成功</span>
                    r5 <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&#39;https://sea.pccsh.cn</span><span class="token interpolation"><span class="token punctuation">{</span>attUrl<span class="token punctuation">}</span></span><span class="token string">&#39;</span></span><span class="token punctuation">,</span>
                                      verify<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span>
                                      headers<span class="token operator">=</span>headers<span class="token punctuation">)</span>

                    <span class="token keyword">print</span><span class="token punctuation">(</span>re<span class="token punctuation">.</span>findall<span class="token punctuation">(</span><span class="token string">&#39;修理成功.损耗\\d{0,}.\\d{0,5}.!&#39;</span><span class="token punctuation">,</span> r5<span class="token punctuation">.</span>text<span class="token punctuation">)</span><span class="token punctuation">)</span>

                    <span class="token comment"># 进入地图</span>
                r9 <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>
                    <span class="token string">&#39;https://sea.pccsh.cn/Map/Index/MapCity/257_517?sid=&#39;</span><span class="token punctuation">,</span>
                    verify<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span>
                    headers<span class="token operator">=</span>headers<span class="token punctuation">)</span>
                <span class="token comment"># 进入西城门</span>
                selector <span class="token operator">=</span> Selector<span class="token punctuation">(</span>text<span class="token operator">=</span>r9<span class="token punctuation">.</span>text<span class="token punctuation">)</span>
                <span class="token keyword">for</span> a7 <span class="token keyword">in</span> selector<span class="token punctuation">.</span>xpath<span class="token punctuation">(</span><span class="token string">&#39;//a[text()=&quot;西城门&quot;]&#39;</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
                    attUrl <span class="token operator">=</span> a7<span class="token punctuation">.</span>xpath<span class="token punctuation">(</span><span class="token string">&#39;@href&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token punctuation">)</span>
                r8 <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&#39;https://sea.pccsh.cn</span><span class="token interpolation"><span class="token punctuation">{</span>attUrl<span class="token punctuation">}</span></span><span class="token string">&#39;</span></span><span class="token punctuation">,</span>
                                  verify<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span>
                                  headers<span class="token operator">=</span>headers<span class="token punctuation">)</span>

                <span class="token comment"># 进入凤凰山</span>
                selector <span class="token operator">=</span> Selector<span class="token punctuation">(</span>text<span class="token operator">=</span>r8<span class="token punctuation">.</span>text<span class="token punctuation">)</span>
                <span class="token keyword">for</span> a8 <span class="token keyword">in</span> selector<span class="token punctuation">.</span>xpath<span class="token punctuation">(</span><span class="token string">&#39;//a[text()=&quot;凤凰山&quot;]&#39;</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
                    attUrl <span class="token operator">=</span> a8<span class="token punctuation">.</span>xpath<span class="token punctuation">(</span><span class="token string">&#39;@href&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token punctuation">)</span>
                    r10 <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&#39;https://sea.pccsh.cn</span><span class="token interpolation"><span class="token punctuation">{</span>attUrl<span class="token punctuation">}</span></span><span class="token string">&#39;</span></span><span class="token punctuation">,</span>
                                       verify<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span>
                                       headers<span class="token operator">=</span>headers<span class="token punctuation">)</span>
    <span class="token keyword">if</span> count <span class="token operator">%</span> <span class="token number">50</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">:</span>
        r11 <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&#39;https://sea.pccsh.cn/User/Index/Index?sid=&#39;</span></span><span class="token punctuation">,</span>
                           verify<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span>
                           headers<span class="token operator">=</span>headers<span class="token punctuation">)</span>

        allex <span class="token operator">=</span> re<span class="token punctuation">.</span>findall<span class="token punctuation">(</span><span class="token string">&#39;(?&lt;=经验:)\\d+\\/\\d+&#39;</span><span class="token punctuation">,</span> r11<span class="token punctuation">.</span>text<span class="token punctuation">)</span>
        level <span class="token operator">=</span> re<span class="token punctuation">.</span>findall<span class="token punctuation">(</span><span class="token string">&#39;(?&lt;=等级:)\\d+&#39;</span><span class="token punctuation">,</span> r11<span class="token punctuation">.</span>text<span class="token punctuation">)</span>

        <span class="token keyword">if</span> <span class="token builtin">len</span><span class="token punctuation">(</span>allex<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">:</span>
            strex <span class="token operator">=</span> <span class="token builtin">str</span><span class="token punctuation">(</span>allex<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">&quot;/&quot;</span><span class="token punctuation">)</span>
            nowEx <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>strex<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">10000</span>
            needEx <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">(</span>strex<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token builtin">int</span><span class="token punctuation">(</span>strex<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

            <span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">&quot;output.txt&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;a&quot;</span><span class="token punctuation">,</span> encoding<span class="token operator">=</span><span class="token string">&quot;utf-8&quot;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>
                <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&#39;已经打怪：</span><span class="token interpolation"><span class="token punctuation">{</span>count<span class="token punctuation">}</span></span><span class="token string">,次\\n已经获得经验</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token number">13500</span> <span class="token operator">*</span> count<span class="token punctuation">}</span></span><span class="token string">&#39;</span></span><span class="token punctuation">,</span> <span class="token builtin">file</span><span class="token operator">=</span>f<span class="token punctuation">)</span>
                <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;当前等级：</span><span class="token interpolation"><span class="token punctuation">{</span>level<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">,</span> <span class="token builtin">file</span><span class="token operator">=</span>f<span class="token punctuation">)</span>
                <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;当前经验</span><span class="token interpolation"><span class="token punctuation">{</span>nowEx<span class="token punctuation">}</span></span><span class="token string">万&quot;</span></span><span class="token punctuation">,</span> <span class="token builtin">file</span><span class="token operator">=</span>f<span class="token punctuation">)</span>
                <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;升级还需要经验：</span><span class="token interpolation"><span class="token punctuation">{</span>needEx <span class="token operator">/</span> <span class="token number">10000</span><span class="token punctuation">}</span></span><span class="token string">万&quot;</span></span><span class="token punctuation">,</span> <span class="token builtin">file</span><span class="token operator">=</span>f<span class="token punctuation">)</span>

        <span class="token keyword">else</span><span class="token punctuation">:</span>
            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;正在打怪&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="倒叙读文件" tabindex="-1"><a class="header-anchor" href="#倒叙读文件" aria-hidden="true">#</a> 倒叙读文件</h3><h4 id="通过java读取文件写的接口-倒叙读居然挺麻烦-reversedlinesfilereader这个类库也没有维护了" tabindex="-1"><a class="header-anchor" href="#通过java读取文件写的接口-倒叙读居然挺麻烦-reversedlinesfilereader这个类库也没有维护了" aria-hidden="true">#</a> 通过java读取文件写的接口，倒叙读居然挺麻烦， ReversedLinesFileReader这个类库也没有维护了</h4><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Service</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> sihaiGamelmpl <span class="token keyword">implements</span> <span class="token class-name">GameQuery</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">Game</span> <span class="token function">queryAllGame</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

<span class="token comment">//        String filePath = &quot;F:\\\\nohup.out&quot;;</span>
        <span class="token class-name">String</span> filePath <span class="token operator">=</span> <span class="token string">&quot;/home/sihai/nohup.out&quot;</span><span class="token punctuation">;</span>
        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> list<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> list1<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token class-name">File</span> file <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span>filePath<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">int</span> linesToRead <span class="token operator">=</span> <span class="token number">200</span><span class="token punctuation">;</span> <span class="token comment">// 读取最后10行</span>

            <span class="token class-name">ReversedLinesFileReader</span> reader <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ReversedLinesFileReader</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token class-name">String</span> line<span class="token punctuation">;</span>
            <span class="token keyword">int</span> count <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
            <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>line <span class="token operator">=</span> reader<span class="token punctuation">.</span><span class="token function">readLine</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> count <span class="token operator">&lt;</span> linesToRead<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                list<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>line<span class="token punctuation">)</span><span class="token punctuation">;</span>
                count<span class="token operator">++</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>


        <span class="token class-name">String</span> str<span class="token operator">=</span>list<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Pattern</span> pattern<span class="token operator">=</span><span class="token class-name">Pattern</span><span class="token punctuation">.</span><span class="token function">compile</span><span class="token punctuation">(</span><span class="token string">&quot;(\\\\d+\\\\.\\\\d+)|当前等级：(\\\\d+)&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//        Pattern pattern1=Pattern.compile(&quot;当前等级：\\\\d+&quot;);</span>
        <span class="token class-name">Matcher</span> matcher<span class="token operator">=</span>pattern<span class="token punctuation">.</span><span class="token function">matcher</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//        Matcher matcher1=pattern1.matcher(str);</span>

        <span class="token keyword">while</span> <span class="token punctuation">(</span>matcher<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            list1<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>matcher<span class="token punctuation">.</span><span class="token function">group</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

<span class="token comment">//        while (matcher1.find()){</span>
<span class="token comment">//            list1.add(matcher.group());</span>
<span class="token comment">//        }</span>






        <span class="token class-name">Game</span> game<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">Game</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        game<span class="token punctuation">.</span><span class="token function">setName</span><span class="token punctuation">(</span><span class="token string">&quot;等级&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        game<span class="token punctuation">.</span><span class="token function">setLevel</span><span class="token punctuation">(</span><span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>list1<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        game<span class="token punctuation">.</span><span class="token function">setExperienceNeed</span><span class="token punctuation">(</span><span class="token class-name">Double</span><span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>list1<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        game<span class="token punctuation">.</span><span class="token function">setExperienceNow</span><span class="token punctuation">(</span><span class="token class-name">Double</span><span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>list1<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">//        return game;</span>
        <span class="token keyword">return</span> game<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="bug" tabindex="-1"><a class="header-anchor" href="#bug" aria-hidden="true">#</a> Bug</h2><div class="custom-container warning"><p class="custom-container-title">现存bug</p></div><h3 id="未知的请求头" tabindex="-1"><a class="header-anchor" href="#未知的请求头" aria-hidden="true">#</a> 未知的请求头</h3><ul><li>未知的请求头，怀疑是https请求，但已忽略证书。jdk <em><strong>安装证书</strong></em> 颇为繁琐</li></ul><h3 id="多插入一条" tabindex="-1"><a class="header-anchor" href="#多插入一条" aria-hidden="true">#</a> 多插入一条</h3><ul><li>异步插入数据库的时候，多插入一条。也有可能是 <em><strong>循环依赖</strong></em> 导致的</li></ul><h3 id="异常停止重启" tabindex="-1"><a class="header-anchor" href="#异常停止重启" aria-hidden="true">#</a> 异常停止重启</h3><ul><li>如果出现服务器异常 <em><strong>Unknown</strong></em>，停止了，如何重启异常</li></ul><h3 id="服务器重启" tabindex="-1"><a class="header-anchor" href="#服务器重启" aria-hidden="true">#</a> 服务器重启</h3><ul><li>关于游戏客服端重启，可以再加一条逻辑判断，进入游戏</li></ul><h2 id="后续任务" tabindex="-1"><a class="header-anchor" href="#后续任务" aria-hidden="true">#</a> 后续任务</h2><ul><li>跑商是否有搞头。没搞头（X）收益太低</li></ul>`,27);function v(m,b){const a=o("router-link");return c(),l("div",null,[k,n("nav",r,[n("ul",null,[n("li",null,[t(a,{to:"#纵横四海"},{default:p(()=>[s("纵横四海")]),_:1}),n("ul",null,[n("li",null,[t(a,{to:"#攻击怪物"},{default:p(()=>[s("攻击怪物")]),_:1})]),n("li",null,[t(a,{to:"#获取经验"},{default:p(()=>[s("获取经验")]),_:1})]),n("li",null,[t(a,{to:"#返回前端"},{default:p(()=>[s("返回前端")]),_:1})]),n("li",null,[t(a,{to:"#python版本"},{default:p(()=>[s("python版本")]),_:1})]),n("li",null,[t(a,{to:"#倒叙读文件"},{default:p(()=>[s("倒叙读文件")]),_:1})])])]),n("li",null,[t(a,{to:"#bug"},{default:p(()=>[s("Bug")]),_:1}),n("ul",null,[n("li",null,[t(a,{to:"#未知的请求头"},{default:p(()=>[s("未知的请求头")]),_:1})]),n("li",null,[t(a,{to:"#多插入一条"},{default:p(()=>[s("多插入一条")]),_:1})]),n("li",null,[t(a,{to:"#异常停止重启"},{default:p(()=>[s("异常停止重启")]),_:1})]),n("li",null,[t(a,{to:"#服务器重启"},{default:p(()=>[s("服务器重启")]),_:1})])])]),n("li",null,[t(a,{to:"#后续任务"},{default:p(()=>[s("后续任务")]),_:1})])])]),d])}const h=e(u,[["render",v],["__file","zhsh.html.vue"]]);export{h as default};
