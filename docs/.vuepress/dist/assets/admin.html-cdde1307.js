import{_ as p,r as o,o as l,c,a as n,b as a,w as e,d as t,e as i}from"./app-58ca2cdc.js";const r="/assets/bigflex-bd56daa9.png",u="/assets/header-36339d6b.png",d={},k={class:"table-of-contents"},v=i(`<h1 id="包管理" tabindex="-1"><a class="header-anchor" href="#包管理" aria-hidden="true">#</a> 包管理</h1><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code> <span class="token string-property property">&quot;dependencies&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token string-property property">&quot;axios&quot;</span><span class="token operator">:</span> <span class="token string">&quot;^1.4.0&quot;</span><span class="token punctuation">,</span>
    <span class="token string-property property">&quot;core-js&quot;</span><span class="token operator">:</span> <span class="token string">&quot;^3.8.3&quot;</span><span class="token punctuation">,</span>
    <span class="token string-property property">&quot;echarts&quot;</span><span class="token operator">:</span> <span class="token string">&quot;^5.1.2&quot;</span><span class="token punctuation">,</span>
    <span class="token string-property property">&quot;element-ui&quot;</span><span class="token operator">:</span> <span class="token string">&quot;^2.15.13&quot;</span><span class="token punctuation">,</span>
    <span class="token string-property property">&quot;js-cookie&quot;</span><span class="token operator">:</span> <span class="token string">&quot;^3.0.1&quot;</span><span class="token punctuation">,</span>
    <span class="token string-property property">&quot;less&quot;</span><span class="token operator">:</span> <span class="token string">&quot;^4.1.2&quot;</span><span class="token punctuation">,</span>
    <span class="token string-property property">&quot;less-loader&quot;</span><span class="token operator">:</span> <span class="token string">&quot;^6.0.0&quot;</span><span class="token punctuation">,</span>
    <span class="token string-property property">&quot;mockjs&quot;</span><span class="token operator">:</span> <span class="token string">&quot;^1.1.0&quot;</span><span class="token punctuation">,</span>
    <span class="token string-property property">&quot;vue&quot;</span><span class="token operator">:</span> <span class="token string">&quot;^2.6.14&quot;</span><span class="token punctuation">,</span>
    <span class="token string-property property">&quot;vue-router&quot;</span><span class="token operator">:</span> <span class="token string">&quot;^3.6.5&quot;</span><span class="token punctuation">,</span>
    <span class="token string-property property">&quot;vuex&quot;</span><span class="token operator">:</span> <span class="token string">&quot;^3.6.2&quot;</span><span class="token punctuation">,</span>
    <span class="token string-property property">&quot;yarn&quot;</span><span class="token operator">:</span> <span class="token string">&quot;^1.22.19&quot;</span>
  <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h1 id="配置文件" tabindex="-1"><a class="header-anchor" href="#配置文件" aria-hidden="true">#</a> 配置文件</h1><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> CompressionWebpackPlugin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;compression-webpack-plugin&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> productionGzipExtensions <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;js&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;css&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span> defineConfig <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;@vue/cli-service&#39;</span><span class="token punctuation">)</span>

module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token function">defineConfig</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">transpileDependencies</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token literal-property property">publicPath</span><span class="token operator">:</span><span class="token string">&#39;./&#39;</span><span class="token punctuation">,</span>    <span class="token comment">//打包路径</span>
    <span class="token literal-property property">lintOnSave</span><span class="token operator">:</span><span class="token boolean">false</span><span class="token punctuation">,</span>   <span class="token comment">//简单命名</span>
    
    <span class="token comment">//压缩打包</span>
    <span class="token function-variable function">configureWebpack</span><span class="token operator">:</span> <span class="token parameter">config</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        config<span class="token punctuation">.</span>plugins<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">CompressionWebpackPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
            <span class="token literal-property property">algorithm</span><span class="token operator">:</span> <span class="token string">&#39;gzip&#39;</span><span class="token punctuation">,</span>
            <span class="token literal-property property">test</span><span class="token operator">:</span> <span class="token keyword">new</span> <span class="token class-name">RegExp</span><span class="token punctuation">(</span><span class="token string">&#39;\\\\.(&#39;</span> <span class="token operator">+</span> productionGzipExtensions<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&#39;|&#39;</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&#39;)$&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token literal-property property">threshold</span><span class="token operator">:</span> <span class="token number">10240</span><span class="token punctuation">,</span>
            <span class="token literal-property property">minRatio</span><span class="token operator">:</span> <span class="token number">0.8</span><span class="token punctuation">,</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        config<span class="token punctuation">.</span>devtool <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
      
    <span class="token comment">//移除非必要插件  </span>
    <span class="token function-variable function">chainWebpack</span><span class="token operator">:</span> <span class="token parameter">config</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        config<span class="token punctuation">.</span>plugins<span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span><span class="token string">&quot;prefetch&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        config<span class="token punctuation">.</span>plugins<span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span><span class="token string">&#39;preload&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        config<span class="token punctuation">.</span>optimization<span class="token punctuation">.</span><span class="token function">minimize</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h1 id="main入口" tabindex="-1"><a class="header-anchor" href="#main入口" aria-hidden="true">#</a> Main入口</h1><div class="custom-container tip"><p class="custom-container-title">入口文件只做嵌入，顶栏，侧边栏，主体内容。直接copy</p><p>明白哪个位置应该放什么组件，包括子组件</p></div><p>1.采用element-ui的Container布局，顶栏，侧边栏，主体内容确认大布局。 <img src="`+r+`" alt=""></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token operator">&lt;</span>template<span class="token operator">&gt;</span>
 <span class="token operator">&lt;</span>div<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span>   布局（flex原理）<span class="token operator">--</span><span class="token operator">&gt;</span>

     <span class="token operator">&lt;</span>el<span class="token operator">-</span>container<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span>     边栏<span class="token punctuation">,</span>组件封装<span class="token operator">--</span><span class="token operator">&gt;</span>
         <span class="token operator">&lt;</span>el<span class="token operator">-</span>aside width<span class="token operator">=</span><span class="token string">&quot;auto&quot;</span><span class="token operator">&gt;</span>
             <span class="token operator">&lt;</span>common<span class="token operator">-</span>aside <span class="token operator">/</span><span class="token operator">&gt;</span>
         <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>aside<span class="token operator">&gt;</span>
     <span class="token operator">&lt;</span>el<span class="token operator">-</span>container<span class="token operator">&gt;</span>

<span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span>       导航，组件封装<span class="token operator">--</span><span class="token operator">&gt;</span>
       <span class="token operator">&lt;</span>el<span class="token operator">-</span>header<span class="token operator">&gt;</span>
         <span class="token operator">&lt;</span>common<span class="token operator">-</span>header <span class="token operator">/</span><span class="token operator">&gt;</span>
       <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>header<span class="token operator">&gt;</span>

<span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span>       主体，使用路由出口<span class="token operator">--</span><span class="token operator">&gt;</span>
       <span class="token operator">&lt;</span>el<span class="token operator">-</span>main<span class="token operator">&gt;</span>
         <span class="token operator">&lt;</span>router<span class="token operator">-</span>view<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>router<span class="token operator">-</span>view<span class="token operator">&gt;</span>
       <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>main<span class="token operator">&gt;</span>

     <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>container<span class="token operator">&gt;</span>
   <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>container<span class="token operator">&gt;</span>
 <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">&gt;</span>

<span class="token operator">&lt;</span>script<span class="token operator">&gt;</span>

<span class="token keyword">import</span> CommonAside <span class="token keyword">from</span> <span class="token string">&quot;@/components/CommonAside.vue&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> CommonHeader <span class="token keyword">from</span> <span class="token string">&quot;@/components/CommonHeader.vue&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>
  <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">return</span><span class="token punctuation">{</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">components</span><span class="token operator">:</span><span class="token punctuation">{</span>
    CommonAside<span class="token punctuation">,</span>
    CommonHeader
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="通用组件" tabindex="-1"><a class="header-anchor" href="#通用组件" aria-hidden="true">#</a> 通用组件</h2><h3 id="侧边栏组件" tabindex="-1"><a class="header-anchor" href="#侧边栏组件" aria-hidden="true">#</a> 侧边栏组件</h3><ul><li>一/二级菜单</li><li>菜单图标巧用</li><li>菜单路由跳转</li><li>标题收起变化</li></ul><h4 id="布局" tabindex="-1"><a class="header-anchor" href="#布局" aria-hidden="true">#</a> 布局</h4><div class="custom-container tip"><p class="custom-container-title">1.展开和收起的文字不一样，使用模板表达式和三元表达式控制属性</p></div><div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span><span class="token punctuation">&gt;</span></span>{{ isCollapse ? &quot;后台&quot; : &quot;后台管理系统&quot; }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="custom-container tip"><p class="custom-container-title">2.菜单名字和图标的遍历,用v-for</p></div><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span>一级菜单<span class="token operator">--</span><span class="token operator">&gt;</span>
 <span class="token operator">&lt;</span>el<span class="token operator">-</span>menu<span class="token operator">-</span>item
      @click<span class="token operator">=</span><span class="token string">&quot;clickMenu(item)&quot;</span>
      v<span class="token operator">-</span><span class="token keyword">for</span><span class="token operator">=</span><span class="token string">&quot;item in noChildren&quot;</span> <span class="token operator">:</span>key<span class="token operator">=</span><span class="token string">&quot;item.name&quot;</span> <span class="token operator">:</span>index<span class="token operator">=</span><span class="token string">&quot;item.name&quot;</span><span class="token operator">&gt;</span>
      <span class="token operator">&lt;</span>i <span class="token operator">:</span><span class="token keyword">class</span><span class="token operator">=</span><span class="token string">&quot;\`el-icon-\${item.icon}\`&quot;</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>i<span class="token operator">&gt;</span>
      <span class="token operator">&lt;</span>span slot<span class="token operator">=</span><span class="token string">&quot;title&quot;</span><span class="token operator">&gt;</span><span class="token punctuation">{</span><span class="token punctuation">{</span> item<span class="token punctuation">.</span>label <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>menu<span class="token operator">-</span>item<span class="token operator">&gt;</span>
    
 <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span>二级下拉菜单<span class="token operator">--</span><span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span>el<span class="token operator">-</span>submenu v<span class="token operator">-</span><span class="token keyword">for</span><span class="token operator">=</span><span class="token string">&quot;item in hasChildren&quot;</span> <span class="token operator">:</span>key<span class="token operator">=</span><span class="token string">&quot;item.label&quot;</span> <span class="token operator">:</span>index<span class="token operator">=</span><span class="token string">&quot;item.label&quot;</span><span class="token operator">&gt;</span>
      <span class="token operator">&lt;</span>template slot<span class="token operator">=</span><span class="token string">&quot;title&quot;</span><span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span>i <span class="token operator">:</span><span class="token keyword">class</span><span class="token operator">=</span><span class="token string">&quot;\`el-icon-\${item.icon}\`&quot;</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>i<span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span>span slot<span class="token operator">=</span><span class="token string">&quot;title&quot;</span><span class="token operator">&gt;</span><span class="token punctuation">{</span><span class="token punctuation">{</span> item<span class="token punctuation">.</span>label <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">&gt;</span>
      <span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">&gt;</span>

      <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span>下拉<span class="token operator">--</span><span class="token operator">&gt;</span>
      <span class="token operator">&lt;</span>el<span class="token operator">-</span>menu<span class="token operator">-</span>item<span class="token operator">-</span>group v<span class="token operator">-</span><span class="token keyword">for</span><span class="token operator">=</span><span class="token string">&quot;subItem in item.children&quot;</span> <span class="token operator">:</span>key<span class="token operator">=</span><span class="token string">&quot;subItem.name&quot;</span><span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span>el<span class="token operator">-</span>menu<span class="token operator">-</span>item
            @click<span class="token operator">=</span><span class="token string">&quot;clickMenu(subItem)&quot;</span>
            <span class="token operator">:</span>index<span class="token operator">=</span><span class="token string">&quot;item.name&quot;</span><span class="token operator">&gt;</span><span class="token punctuation">{</span><span class="token punctuation">{</span> subItem<span class="token punctuation">.</span>label <span class="token punctuation">}</span><span class="token punctuation">}</span>
        <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>menu<span class="token operator">-</span>item<span class="token operator">&gt;</span>
      <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>menu<span class="token operator">-</span>item<span class="token operator">-</span>group<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>submenu<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="数据" tabindex="-1"><a class="header-anchor" href="#数据" aria-hidden="true">#</a> 数据</h4><div class="custom-container tip"><p class="custom-container-title">数据中有嵌套的数据，使用计算属性分离出来，普通菜单和有子菜单。还有控制是否展开的数据，以及路由显示权限的数据</p></div><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token literal-property property">computed</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token comment">//   没有子菜单</span>
    <span class="token function">noChildren</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>menuData<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token parameter">item</span> <span class="token operator">=&gt;</span> <span class="token operator">!</span>item<span class="token punctuation">.</span>children<span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token comment">//   有子菜单</span>
    <span class="token function">hasChildren</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>menuData<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token parameter">item</span> <span class="token operator">=&gt;</span> item<span class="token punctuation">.</span>children<span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token comment">// 是否展开</span>
    <span class="token function">isCollapse</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>$store<span class="token punctuation">.</span>state<span class="token punctuation">.</span>tab<span class="token punctuation">.</span>isCollapse
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token comment">// 菜单显示控制</span>
    <span class="token function">menuData</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>Cookie<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;menu&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token keyword">this</span><span class="token punctuation">.</span>$store<span class="token punctuation">.</span>state<span class="token punctuation">.</span>tab<span class="token punctuation">.</span>menu
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="方法" tabindex="-1"><a class="header-anchor" href="#方法" aria-hidden="true">#</a> 方法</h4><div class="custom-container tip"><p class="custom-container-title">路由已经包含在数据中，通过点击参数传递过来，直接push跳转</p><p>但是有个条件，路由不一致才可以跳转或者不在首页/根目录才能跳转</p></div><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>  <span class="token comment">// 点击路由跳转</span>
  <span class="token function">clickMenu</span><span class="token punctuation">(</span><span class="token parameter">item</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// 仅当前路由不一致或者是首页是home的时候才允许,route是当前路由，router是实例</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>$route<span class="token punctuation">.</span>path <span class="token operator">!==</span> item<span class="token punctuation">.</span>path <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>$route<span class="token punctuation">.</span>path <span class="token operator">===</span> <span class="token string">&#39;/home&#39;</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>item<span class="token punctuation">.</span>path <span class="token operator">===</span> <span class="token string">&#39;/&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>$router<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span>path<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="顶栏组件" tabindex="-1"><a class="header-anchor" href="#顶栏组件" aria-hidden="true">#</a> 顶栏组件</h3><ul><li>侧边栏收起按钮</li><li>个人中心操作</li><li>下拉框退出按钮</li></ul><h4 id="布局-1" tabindex="-1"><a class="header-anchor" href="#布局-1" aria-hidden="true">#</a> 布局</h4><p><img src="`+u+`" alt=""></p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">.header-container</span> <span class="token punctuation">{</span>
  <span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span>
  <span class="token property">justify-content</span><span class="token punctuation">:</span> space-between<span class="token punctuation">;</span>
  <span class="token property">align-items</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="数据-1" tabindex="-1"><a class="header-anchor" href="#数据-1" aria-hidden="true">#</a> 数据</h4><ul><li>无</li></ul><h4 id="方法-1" tabindex="-1"><a class="header-anchor" href="#方法-1" aria-hidden="true">#</a> 方法</h4><div class="custom-container tip"><p class="custom-container-title">绑定按钮事件，点击按钮的时候，收起侧边栏</p><p>方法内直接改变属性就可以，不过这里用的是vuex提交方法。</p></div><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span>    左边内容<span class="token operator">--</span><span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">&quot;l-content&quot;</span><span class="token operator">&gt;</span>
      <span class="token operator">&lt;</span>el<span class="token operator">-</span>button @click<span class="token operator">=</span><span class="token string">&quot;handleMenu&quot;</span> icon<span class="token operator">=</span><span class="token string">&quot;el-icon-menu&quot;</span> size<span class="token operator">=</span><span class="token string">&quot;mini&quot;</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>button<span class="token operator">&gt;</span>
      <span class="token operator">&lt;</span>span <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">&quot;text&quot;</span><span class="token operator">&gt;</span>首页<span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>
    
   <span class="token function">handleMenu</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>$store<span class="token punctuation">.</span><span class="token function">commit</span><span class="token punctuation">(</span><span class="token string">&#39;collapseMenu&#39;</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="custom-container tip"><p class="custom-container-title">绑定按钮事件，点击下拉按钮的时候，退出登录</p><p>注意这里比较特殊，是绑定在顶级DOM上的，而下拉项传入command参数绑定时间，类似事件委托。</p></div><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>  <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span>    右边内容<span class="token operator">--</span><span class="token operator">&gt;</span>
 <span class="token operator">&lt;</span>el<span class="token operator">-</span>dropdown @command<span class="token operator">=</span><span class="token string">&quot;handleClick&quot;</span><span class="token operator">&gt;</span>

  <span class="token operator">&lt;</span>span <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">&quot;el-dropdown-link&quot;</span><span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span>img <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">&quot;user&quot;</span> src<span class="token operator">=</span><span class="token string">&quot;../assets/images/user.png&quot;</span> alt<span class="token operator">=</span><span class="token string">&quot;&quot;</span><span class="token operator">&gt;</span>
  <span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">&gt;</span>
 
  <span class="token operator">&lt;</span>el<span class="token operator">-</span>dropdown<span class="token operator">-</span>menu slot<span class="token operator">=</span><span class="token string">&quot;dropdown&quot;</span><span class="token operator">&gt;</span>
       <span class="token operator">&lt;</span>el<span class="token operator">-</span>dropdown<span class="token operator">-</span>item<span class="token operator">&gt;</span>个人中心<span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>dropdown<span class="token operator">-</span>item<span class="token operator">&gt;</span>
       <span class="token operator">&lt;</span>el<span class="token operator">-</span>dropdown<span class="token operator">-</span>item command<span class="token operator">=</span><span class="token string">&quot;cancel&quot;</span><span class="token operator">&gt;</span>登出<span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>dropdown<span class="token operator">-</span>item<span class="token operator">&gt;</span>
  <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>dropdown<span class="token operator">-</span>menu<span class="token operator">&gt;</span>
  <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>dropdown<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="主体部分" tabindex="-1"><a class="header-anchor" href="#主体部分" aria-hidden="true">#</a> 主体部分</h2><h3 id="登录组件" tabindex="-1"><a class="header-anchor" href="#登录组件" aria-hidden="true">#</a> 登录组件</h3><ul><li>表单校验</li><li>登录逻辑</li></ul><h4 id="布局-2" tabindex="-1"><a class="header-anchor" href="#布局-2" aria-hidden="true">#</a> 布局</h4><div class="custom-container tip"><p class="custom-container-title">TIP</p></div><div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="数据-2" tabindex="-1"><a class="header-anchor" href="#数据-2" aria-hidden="true">#</a> 数据</h4><div class="custom-container tip"><p class="custom-container-title">TIP</p></div><div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="方法-2" tabindex="-1"><a class="header-anchor" href="#方法-2" aria-hidden="true">#</a> 方法</h4><div class="custom-container tip"><p class="custom-container-title">TIP</p></div><div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="主要组件" tabindex="-1"><a class="header-anchor" href="#主要组件" aria-hidden="true">#</a> 主要组件</h3><ul><li>用户卡片显示登录信息</li><li>表格展示数据</li><li>小卡片显示详细</li><li>echarts折线图。饼图。柱状图</li></ul><h4 id="布局-3" tabindex="-1"><a class="header-anchor" href="#布局-3" aria-hidden="true">#</a> 布局</h4><div class="custom-container tip"><p class="custom-container-title">TIP</p></div><div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="数据-3" tabindex="-1"><a class="header-anchor" href="#数据-3" aria-hidden="true">#</a> 数据</h4><div class="custom-container tip"><p class="custom-container-title">TIP</p></div><div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="方法-3" tabindex="-1"><a class="header-anchor" href="#方法-3" aria-hidden="true">#</a> 方法</h4><div class="custom-container tip"><p class="custom-container-title">TIP</p></div><div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="用户组件" tabindex="-1"><a class="header-anchor" href="#用户组件" aria-hidden="true">#</a> 用户组件</h3><ul><li>新增用户</li><li>删除用户</li><li>编辑用户</li><li>分页展示</li><li>查询数据</li></ul><h4 id="布局-4" tabindex="-1"><a class="header-anchor" href="#布局-4" aria-hidden="true">#</a> 布局</h4><div class="custom-container tip"><p class="custom-container-title">TIP</p></div><div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="数据-4" tabindex="-1"><a class="header-anchor" href="#数据-4" aria-hidden="true">#</a> 数据</h4><div class="custom-container tip"><p class="custom-container-title">TIP</p></div><div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="方法-4" tabindex="-1"><a class="header-anchor" href="#方法-4" aria-hidden="true">#</a> 方法</h4><div class="custom-container tip"><p class="custom-container-title">TIP</p></div><div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="展示组件" tabindex="-1"><a class="header-anchor" href="#展示组件" aria-hidden="true">#</a> 展示组件</h3><ul><li>接口使用</li><li>停止按钮</li></ul><h4 id="布局-5" tabindex="-1"><a class="header-anchor" href="#布局-5" aria-hidden="true">#</a> 布局</h4><div class="custom-container tip"><p class="custom-container-title">曾考虑用表格和普通的插值表达式，感觉差不多。</p></div><div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">&gt;</span></span>  {{name}}:{{level}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>当前经验：{{ExNedd}}万<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>升级需要:<span class="token entity named-entity" title=" ">&amp;nbsp;</span><span class="token entity named-entity" title=" ">&amp;nbsp;</span><span class="token entity named-entity" title=" ">&amp;nbsp;</span>{{ExNow}}万<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="数据-5" tabindex="-1"><a class="header-anchor" href="#数据-5" aria-hidden="true">#</a> 数据</h4><div class="custom-container tip"><p class="custom-container-title">定义一个空数据容器</p></div><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code> <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">return</span><span class="token punctuation">{</span>
      <span class="token literal-property property">name</span><span class="token operator">:</span><span class="token string">&#39;&#39;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">level</span><span class="token operator">:</span><span class="token string">&quot;&quot;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">ExNow</span><span class="token operator">:</span><span class="token string">&#39;&#39;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">ExNedd</span><span class="token operator">:</span><span class="token string">&#39;&#39;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="方法-5" tabindex="-1"><a class="header-anchor" href="#方法-5" aria-hidden="true">#</a> 方法</h4><div class="custom-container tip"><p class="custom-container-title">从接口获取数据，赋值解构给空数据</p></div><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>  <span class="token function">mounted</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">getEX</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span>data<span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> <span class="token punctuation">{</span>name<span class="token punctuation">,</span>experienceNow<span class="token punctuation">,</span>experienceNeed<span class="token punctuation">,</span>level<span class="token punctuation">}</span> <span class="token operator">=</span> data<span class="token punctuation">.</span>data
      <span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token operator">=</span>name<span class="token punctuation">;</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>ExNow<span class="token operator">=</span>experienceNow<span class="token punctuation">;</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>ExNedd<span class="token operator">=</span>experienceNeed<span class="token punctuation">;</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>level<span class="token operator">=</span>level<span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="其他部分" tabindex="-1"><a class="header-anchor" href="#其他部分" aria-hidden="true">#</a> 其他部分</h2><h3 id="封装http请求" tabindex="-1"><a class="header-anchor" href="#封装http请求" aria-hidden="true">#</a> 封装http请求</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">import</span> axios <span class="token keyword">from</span> <span class="token string">&quot;axios&quot;</span><span class="token punctuation">;</span>

<span class="token comment">// 封装一个基础实例</span>
<span class="token keyword">const</span> http <span class="token operator">=</span> axios<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token comment">// 通用请求前缀</span>
    <span class="token literal-property property">baseURL</span><span class="token operator">:</span><span class="token string">&quot;/api&quot;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">timeout</span><span class="token operator">:</span><span class="token number">5000</span><span class="token punctuation">,</span>
    <span class="token literal-property property">headers</span><span class="token operator">:</span><span class="token punctuation">{</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token comment">// 请求拦截</span>
http<span class="token punctuation">.</span>interceptors<span class="token punctuation">.</span>request<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">config</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

    <span class="token comment">// 请求前操作</span>
    <span class="token keyword">return</span> config<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">error</span><span class="token punctuation">)</span><span class="token punctuation">{</span>

    <span class="token comment">// 请求错误操作</span>
    <span class="token keyword">return</span> Promise<span class="token punctuation">.</span><span class="token function">reject</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span>
<span class="token punctuation">}</span>


<span class="token comment">// 响应拦截</span>
http<span class="token punctuation">.</span>interceptors<span class="token punctuation">.</span>response<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">response</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

    <span class="token comment">// 响应前操作</span>
    <span class="token keyword">return</span> response<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">error</span><span class="token punctuation">)</span><span class="token punctuation">{</span>

    <span class="token comment">// 响应错误操作</span>
    <span class="token keyword">return</span> Promise<span class="token punctuation">.</span><span class="token function">reject</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span>
<span class="token punctuation">}</span>



<span class="token comment">// 暴露</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> http
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="路由设置" tabindex="-1"><a class="header-anchor" href="#路由设置" aria-hidden="true">#</a> 路由设置</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">import</span> Vue <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span>
<span class="token keyword">import</span> VueRouter <span class="token keyword">from</span> <span class="token string">&#39;vue-router&#39;</span>
<span class="token keyword">import</span> MainPage <span class="token keyword">from</span> <span class="token string">&quot;@/views/MainPage.vue&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> loginPage <span class="token keyword">from</span> <span class="token string">&quot;@/views/loginPage.vue&quot;</span><span class="token punctuation">;</span>
<span class="token comment">// 1.引入组件</span>

<span class="token comment">// 2.全局使用</span>
Vue<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>VueRouter<span class="token punctuation">)</span>

<span class="token comment">//3.组件映射规则</span>
<span class="token keyword">const</span> routes<span class="token operator">=</span><span class="token punctuation">[</span>          
             <span class="token punctuation">{</span>
              <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">&#39;/&#39;</span><span class="token punctuation">,</span><span class="token literal-property property">component</span><span class="token operator">:</span> MainPage<span class="token punctuation">,</span>    <span class="token comment">//主路由 </span>
              <span class="token literal-property property">redirect</span><span class="token operator">:</span><span class="token string">&#39;/home&#39;</span><span class="token punctuation">,</span>                 <span class="token comment">//重定向，路径是是/的时候跳转到home</span>
              <span class="token literal-property property">name</span><span class="token operator">:</span><span class="token string">&#39;main&#39;</span><span class="token punctuation">,</span>                      <span class="token comment">//别名</span>
              <span class="token literal-property property">keepAlive</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>                  <span class="token comment">//懒加载</span>
              <span class="token literal-property property">children</span><span class="token operator">:</span><span class="token punctuation">[</span><span class="token punctuation">]</span>                       <span class="token comment">//留空从后端获取</span>
             <span class="token punctuation">}</span><span class="token punctuation">,</span>
             
             <span class="token punctuation">{</span>
              <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">&#39;/login&#39;</span><span class="token punctuation">,</span><span class="token literal-property property">name</span><span class="token operator">:</span><span class="token string">&#39;login&#39;</span><span class="token punctuation">,</span><span class="token literal-property property">component</span><span class="token operator">:</span> loginPage<span class="token punctuation">,</span>
              <span class="token literal-property property">keepAlive</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
             <span class="token punctuation">}</span>
             <span class="token punctuation">]</span>

<span class="token comment">// 4.挂载</span>
<span class="token keyword">const</span> router<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">VueRouter</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    routes<span class="token punctuation">,</span>
    <span class="token literal-property property">mode</span><span class="token operator">:</span><span class="token string">&quot;history&quot;</span>       <span class="token comment">//设置成历史模式，刷新可能报错，需要nginx转发</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token comment">// 5.导出到main</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> router
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="请求接口" tabindex="-1"><a class="header-anchor" href="#请求接口" aria-hidden="true">#</a> 请求接口</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">import</span> http <span class="token keyword">from</span> <span class="token string">&#39;../utils/request&#39;</span>
<span class="token comment">// 使用utils下的工具类封装具体请求方法,请求方法层。这是前端专用的调用端口</span>

<span class="token comment">// 请求首页数据</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">getData</span><span class="token operator">=</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
    <span class="token comment">// 返回promise对象，就可以.then截获内容</span>
    <span class="token keyword">return</span> http<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;/home/getData&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>


<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">getMenu</span><span class="token operator">=</span><span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
    <span class="token comment">// 返回promise对象，就可以.then截获内容</span>
    <span class="token keyword">return</span> http<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token string">&#39;/permission/getMenu&#39;</span><span class="token punctuation">,</span>data<span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">getEX</span><span class="token operator">=</span><span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
    <span class="token comment">// 返回promise对象，就可以.then截获内容</span>
    <span class="token keyword">return</span> http<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;/game/zhsh&#39;</span><span class="token punctuation">,</span>data<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="main-js" tabindex="-1"><a class="header-anchor" href="#main-js" aria-hidden="true">#</a> main.js</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">import</span> Vue <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span>
<span class="token keyword">import</span> App <span class="token keyword">from</span> <span class="token string">&#39;./App.vue&#39;</span>
<span class="token keyword">import</span> Element <span class="token keyword">from</span> <span class="token string">&#39;element-ui&#39;</span>
<span class="token keyword">import</span> <span class="token string">&#39;element-ui/lib/theme-chalk/index.css&#39;</span>
<span class="token comment">// import {Button} from &quot;element-ui&quot;;</span>
<span class="token keyword">import</span> router <span class="token keyword">from</span> <span class="token string">&quot;./router/index&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token string">&#39;./api/mock&#39;</span>
<span class="token keyword">import</span> Cookie <span class="token keyword">from</span> <span class="token string">&quot;js-cookie&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> store <span class="token keyword">from</span> <span class="token string">&quot;@/store&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> VueRouter <span class="token keyword">from</span> <span class="token string">&quot;vue-router&quot;</span><span class="token punctuation">;</span>

Vue<span class="token punctuation">.</span>config<span class="token punctuation">.</span>productionTip <span class="token operator">=</span> <span class="token boolean">false</span>
<span class="token comment">// 全局注入</span>
Vue<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>Element<span class="token punctuation">)</span>
Vue<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>VueRouter<span class="token punctuation">)</span>

router<span class="token punctuation">.</span><span class="token function">beforeEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">to<span class="token punctuation">,</span>from<span class="token punctuation">,</span>next</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
  <span class="token keyword">const</span> token<span class="token operator">=</span>Cookie<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;token&#39;</span><span class="token punctuation">)</span>
  
  <span class="token comment">// token不存在且跳转业务页时</span>
  <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>token <span class="token operator">&amp;&amp;</span> to<span class="token punctuation">.</span>name<span class="token operator">!==</span><span class="token string">&#39;login&#39;</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">name</span><span class="token operator">:</span><span class="token string">&#39;login&#39;</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>token <span class="token operator">&amp;&amp;</span> to<span class="token punctuation">.</span>name<span class="token operator">===</span><span class="token string">&#39;login&#39;</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">name</span><span class="token operator">:</span><span class="token string">&#39;home&#39;</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token punctuation">)</span>

<span class="token comment">// 按需引入</span>
<span class="token comment">// Vue.use(Button)</span>

<span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  store<span class="token punctuation">,</span>
  router<span class="token punctuation">,</span>
  <span class="token function-variable function">render</span><span class="token operator">:</span> <span class="token parameter">h</span> <span class="token operator">=&gt;</span> <span class="token function">h</span><span class="token punctuation">(</span>App<span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token function">created</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    store<span class="token punctuation">.</span><span class="token function">commit</span><span class="token punctuation">(</span><span class="token string">&#39;addMenu&#39;</span><span class="token punctuation">,</span>router<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">$mount</span><span class="token punctuation">(</span><span class="token string">&#39;#app&#39;</span><span class="token punctuation">)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,88);function m(b,g){const s=o("router-link");return l(),c("div",null,[n("nav",k,[n("ul",null,[n("li",null,[a(s,{to:"#通用组件"},{default:e(()=>[t("通用组件")]),_:1}),n("ul",null,[n("li",null,[a(s,{to:"#侧边栏组件"},{default:e(()=>[t("侧边栏组件")]),_:1})]),n("li",null,[a(s,{to:"#顶栏组件"},{default:e(()=>[t("顶栏组件")]),_:1})])])]),n("li",null,[a(s,{to:"#主体部分"},{default:e(()=>[t("主体部分")]),_:1}),n("ul",null,[n("li",null,[a(s,{to:"#登录组件"},{default:e(()=>[t("登录组件")]),_:1})]),n("li",null,[a(s,{to:"#主要组件"},{default:e(()=>[t("主要组件")]),_:1})]),n("li",null,[a(s,{to:"#用户组件"},{default:e(()=>[t("用户组件")]),_:1})]),n("li",null,[a(s,{to:"#展示组件"},{default:e(()=>[t("展示组件")]),_:1})])])]),n("li",null,[a(s,{to:"#其他部分"},{default:e(()=>[t("其他部分")]),_:1}),n("ul",null,[n("li",null,[a(s,{to:"#封装http请求"},{default:e(()=>[t("封装http请求")]),_:1})]),n("li",null,[a(s,{to:"#路由设置"},{default:e(()=>[t("路由设置")]),_:1})]),n("li",null,[a(s,{to:"#请求接口"},{default:e(()=>[t("请求接口")]),_:1})]),n("li",null,[a(s,{to:"#main-js"},{default:e(()=>[t("main.js")]),_:1})])])])])]),v])}const y=p(d,[["render",m],["__file","admin.html.vue"]]);export{y as default};
